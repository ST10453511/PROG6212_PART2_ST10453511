@using System.Security.Claims
@using PROG6212_POE.Models
@{
    ViewData["Title"] = "Dashboard";
    string role = User.FindFirst(ClaimTypes.Role)?.Value ?? "";
    var recent = ViewBag.RecentClaims as System.Collections.Generic.IReadOnlyList<ClaimDto>;
}

<h2 class="page-intro">Welcome, @User.Identity?.Name</h2>

@if (role == "Lecturer")
{
    <div class="row g-3 mb-4">
        <div class="col-md-4">
            <a asp-controller="Dashboard" asp-action="SubmitClaim" class="text-decoration-none">
                <div class="card tile-card h-100">
                    <div class="card-body d-flex align-items-start gap-3">
                        <div class="tile-icon"><i class="bi bi-journal-plus"></i></div>
                        <div>
                            <h5 class="mb-1">Submit Claim</h5>
                            <div class="text-muted small">Capture date, hours, rate & upload doc.</div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-4">
            <a asp-controller="Dashboard" asp-action="MyClaims" class="text-decoration-none">
                <div class="card tile-card h-100">
                    <div class="card-body d-flex align-items-start gap-3">
                        <div class="tile-icon"><i class="bi bi-card-checklist"></i></div>
                        <div>
                            <h5 class="mb-1">My Claims</h5>
                            <div class="text-muted small">View statuses, filter & search.</div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>

    @if (recent != null && recent.Any())
    {
        <div class="card surface">
            <div class="card-header clean">Recent Claims</div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-striped table-sm align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Hours</th>
                                <th>Activity</th>
                                <th>Rate (R)</th>
                                <th>Total (R)</th>
                                <th>Status</th>
                                <th style="min-width:180px;">Progress</th>
                                <th>Docs</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var c in recent)
                            {
                                var width = c.Status == ClaimStatus.Submitted ? 33 : c.Status == ClaimStatus.UnderReview ? 66 : 100;
                                var badge =
                                c.Status == ClaimStatus.UnderReview ? "badge-review" :
                                c.Status == ClaimStatus.Approved ? "badge-approved" :
                                c.Status == ClaimStatus.Rejected ? "badge-rejected" : "badge-submitted";

                                <tr>
                                    <td>@c.DateWorked.ToString("yyyy-MM-dd")</td>
                                    <td>@c.HoursWorked</td>
                                    <td>@c.Activity</td>
                                    <td>@c.HourlyRate.ToString("N2")</td>
                                    <td>@c.TotalAmount.ToString("N2")</td>
                                    <td><span class="badge badge-status @badge">@c.Status</span></td>
                                    <td>
                                        <div class="progress progress-slim">
                                            <div class="progress-bar" role="progressbar" style="width:@width%"></div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (c.Documents?.Any() ?? false)
                                        {
                                            foreach (var d in c.Documents)
                                            {
                                                <a href="@d.RelativePath" target="_blank" class="small">@d.FileName</a>
                            
                                                <br />
                                            }
                                        }
                                        else
                                        {

                                            <span class="text-muted small">None</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
}
else if (role == "ProgrammeCoordinator" || role == "AcademicManager")
{
    <div class="card tile-card">
        <div class="card-body">
            <h5 class="mb-1">Review Claims</h5>
            <div class="text-muted small">Approve or reject with comments.</div>
            <a asp-controller="Management" asp-action="ReviewClaims" class="btn btn-dark btn-sm mt-2">
                Open Review
            </a>
        </div>
    </div>
}

@section Scripts {
    <script>
        const statusPercent = s => s==="Submitted"?33:(s==="UnderReview"?66:100);
        function refreshStatuses(){
          fetch('@Url.Action("MyClaimsStatusData", "Dashboard")',{cache:"no-store"})
           .then(r=>r.json()).then(items=>{
             items.forEach(it=>{
               const row = document.querySelector(`tr td span.badge-status`)?.closest('tr');
               const bar = document.querySelector(`div.progress-bar[data-id='${it.id}']`) || null;
               document.querySelectorAll(`span.claim-status[data-id='${it.id}']`).forEach(el=>el.textContent=it.status);
               if(bar){ bar.style.width=statusPercent(it.status)+"%"; }
             });
           }).catch(()=>{});
        }
        refreshStatuses(); setInterval(refreshStatuses, 10000);
    </script>
}